Solve Volterra and Fredholm integral equations
==============================================

This Python package estimates Volterra and Fredholm integral equations
using known techniques.

Volterra
--------

|plot generated by package|

This package provides the function ``SolveVolterra`` which approximates
the solution, g(x), to the Volterra Integral Equation of the first kind:

|f(s) = \\int\_a^s K(s,y) g(y) dy|

using the method in `Betto and Thomas
(2021) <https://mattwthomas.com/papers/asymmetric-all-pay-contests-with-spillovers/>`__.

See the "Trapezoid and Midpoint Rules" section for a discussion of these
two rules.

Parameters
~~~~~~~~~~

::

    k : function
        The kernel function that takes two arguments.
    f : function 
        The left hand side (free) function with f(a) = 0.
    a : float
        Lower bound of the integral, defaults to 0.
    b : float
        Upper bound of the estimate, defaults to 1.
    num : int
        Number of estimation points between zero and `b`.
    method : string
        Use either the 'midpoint' (default) or 'trapezoid' rule.

Returns
~~~~~~~

::

    grid : 2-D array
        Input values are in the first row and output values are in the second row.

Fredholm
--------

|Fredholm plot generated by package|

This package provides the function ``SolveFredholm`` which approximates
the solution, g(x), to the Fredholm Integral Equation of the first kind:

|f(s) = \\int\_a^b K(s,y) g(y) dy|

using the method described in `Twomey
(1963) <https://doi.org/10.1145/321150.321157>`__. It will return a
smooth curve that is an approximate solution. However, it may not be a
good approximate to the true solution.

Parameters
~~~~~~~~~~

::

    k : function
        The kernel function that takes two arguments.
    f : function 
        The left hand side (free) function that takes one argument.
    a : float
        Lower bound of the of the Fredholm definite integral, defaults to -1.
    b : float
        Upper bound of the of the Fredholm definite integral, defaults to 1.
    num : int
        Number of estimation points between zero and `b`.
    smin : float
        Optional. Lower bound of enforcement values for s.
    smax : float
        Optional. Upper bound of enforcement values for s.
    snum : int
        Optional. Number of enforcement points for s.

Returns
~~~~~~~

::

    grid : 2-D array
        Input values are in the first row and output values are in the second row.


.. |plot generated by package| image:: https://raw.githubusercontent.com/mwt/inteq/main/docs/volterra/volterra-example.svg
.. |f(s) = \\int\_a^s K(s,y) g(y) dy| image:: https://raw.githubusercontent.com/mwt/inteq/main/assets/volterra-equation.svg
.. |Fredholm plot generated by package| image:: https://raw.githubusercontent.com/mwt/inteq/main/docs/fredholm/fredholm-example.svg
.. |f(s) = \\int\_a^b K(s,y) g(y) dy| image:: https://raw.githubusercontent.com/mwt/inteq/main/assets/fredholm-equation.svg
